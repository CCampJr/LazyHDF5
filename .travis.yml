# http://lmjohns3.com/2015/06/using-travis-ci-with-miniconda-scipy-and-nose.html

language: python
matrix:
  include:
  - os: linux
    dist: trusty
    sudo: false
    python: '3.4'
  - os: linux
    dist: trusty
    sudo: false
    python: '3.5'
  - os: linux
    dist: trusty
    sudo: false
    python: '3.6'
  - os: linux
    dist: trusty
    sudo: false
    python: 3.6-dev
cache:
  apt: true
  pip: true
  ccache: true
  directories:
  
addons:
  apt:
    packages:
    - libatlas-dev
    - libatlas-base-dev
    - liblapack-dev
    - gfortran

before_install:
# - if [[ "$TRAVIS_PYTHON_VERSION" == "3.4" && "$TRAVIS_PYTHON_VERSION" == "3.5" ]];
  # then wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
  # bash miniconda.sh -b -p $HOME/miniconda;
  # export PATH="$HOME/miniconda/bin:$PATH";
  # conda update --yes conda; 
  # fi
# - pip install matplotlib
# - pip install sphinx
# - pip install numpydoc
# - pip install sphinx_rtd_theme
install:
- pip install -qq --upgrade pip setuptools wheel
- if [[ "$TRAVIS_PYTHON_VERSION" == "3.4" && "$TRAVIS_PYTHON_VERSION" == "3.5" ]];
  then pip install -qq --only-binary=numpy,scipy numpy;
  fi
  # then conda install --yes python=$TRAVIS_PYTHON_VERSION pip numpy scipy;
  # fi
- pip install pytest-cov
- if [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]];
  then pip install codecov;
  fi
- python setup.py install
# - python setup.py sdist
# - cd $TRAVIS_BUILD_DIR/docs/
# - sphinx-apidoc -o ./source ../sciplot
# - make html
# - pip uninstall -y sciplot-pyqt
# - cd $TRAVIS_BUILD_DIR
# - python setup.py install
script:
- pytest --cov=./

after_success:
- if [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]];
  then codecov;
  fi
# branches:
#   only:
#   - master
#   - dev

# deploy:
#   provider: pypi
#   server: https://test.pypi.org/legacy/ # Remove this line for official deployment
#   user: ccampjr
#   password:
#     # TestPyPi password 
#     secure: YHcqQVEjUBnL7IjLaYu06NlLncucPXF2UJbDS7eLnXytB1UhwEWJvpHrbR7goKsFRHCyyyPf+cjFkG/0XSDK4aJsJhKqbvq5lmN8zNxF0jCgI98AI8p4OkcrB/MYM52GRFczWuiT602BhAdGTt/mh0tQwj9BRb3rDcdmcm2ksDQwkW3SRcBMQSqdN7Ovi215xeKAdz7FBo52vHq4AlOIngcVk1cznX+17T3Y9ea2zwovz0PD7nAD9eMWfUkgAXeSujIwHKuwttb8+ovmNCwi6KiCFRFGjHqGqQ2L0PvbwZsAvEQy0c1KR3SH+OHbEdEsyNEpm8Ulrne1LDQ1LLwPel7IU8+e0S5WUjs044kkyAw/diJHOX18t7TNJLG5yPR319yi46R/mlwn75iMiqVWb4+k4fRazb/J+jOVTRKVDfr4R1pBclESZe4NaGeRBT//QSE8QcQ7jbc+A0tHJRcd6CkLw1ZkbVGFQbRXrGGK0761GcweMeLz8OZjpjEbOZLRPi7tcKE2xFoLGqtkCjxBridbG66jLroHw6QVz03/zVsKiHRSPaX1BzSmaX4JL+j3gOV/XAK0vaqVqlVc7kRG0tF4GZ5aZYStCuUB0m3CJJJ9YvrQ4qzgLUF1F7KI/Avb7SaS4ZPVep2PYF1C6oPMg6+BMxNMVRw8K43Q7RjQwGc=

#     # PyPi
#     # secure: i42zH1vMHFUGN+khwk78L+E13tKln/EWKu8r1Zyl0nfFKo31fEhgL/RpyUjaYbHOBLucXv6xn8W5K9PO3D40OTuRUOFRVYnpmOucITP4v06NLRQkRAslmdG1+2aP7iG863FUM9KI5mVANGAWowo8aSw+wdpGHVekuSN5lO1EGFw/43/xllwCLRzOQ0ndTtIsnQ0ObCcsOJqHIuv5aDfsHgh8ayC0tVCUwB2Rn1/BylaZ3ZAWdjsFJI6rmCg80PkFwOnh0YotfIE/kHEcoxs5qgt9huwtAIjKk3iPlIvYS/Ac7nEYHm1kM5A6SvWMDdJZ/ClEuybLau8hnf8APon2tEiUCyADNCibZ2Zevl2Qq43Ub092/Pv5uZ0pZRshZNqNxtvlSKRB5dkIgOvyETNy+i0N1WGuvNefZNQXOiOBHkgiqz1ZwTfIIKCK92Da2PyMZoHDUi24b8e4JKKe1i7jSUkTHly1oW0F8oGrmT/rmwSzu2aHl2MN/WyROhDRUgjuJeeCFcNex7CRXOnPE+wpLcHxlpPm0H43+mFTXlVeZIPYAn1Nwl3/m9fl4+bjaGLSeIwdtHck9POvtz6ffMB+NbNFDqVB6d5+kgXScO96SUxwrDA3Pf9yy+kmZqd9j6JpbnhP4uMxztxAzfhDENRrp9GQ1M75MftmVS4HzU4ZWgw=
  
#   on:
#     all_branches: true
#     tags: true
#     python: 3.6